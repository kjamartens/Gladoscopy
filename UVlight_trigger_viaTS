import serial
import time
import sys
tgsCom    = 'COM12'
tgS = serial.Serial()
tgS.port = tgsCom
tgS.baudrate = 115200
tgS.bytesize = serial.EIGHTBITS #number of bits per bytes
tgS.parity = serial.PARITY_NONE #set parity check: no parity
tgS.stopbits = serial.STOPBITS_ONE #number of stop bits
#tgS.timeout = None          #block read
tgS.timeout = 0.5            #non-block read
tgS.xonxoff = False     #disable software flow control
tgS.rtscts = False     #disable hardware (RTS/CTS) flow control
tgS.dsrdtr = False       #disable hardware (DSR/DTR) flow control
tgS.writeTimeout = 0     #timeout for write


try:
    print("Activating Triggerscope...")
    tgS.open()
except Exception:
    print("ERROR: Triggerscope Com port NOT OPEN: ")
    exit()


def writetgs(tgin):
    '''send a serial command to the triggerscope...
    Args:
        tgin: input string to send. Note the command terminator should be included in the string.
    Returns:
        char string of whatever comes back on the serial line.
    Raises:
        none.
    '''
    tgS.flushInput() #flush input buffer, discarding all its contents
    tgS.flushOutput()#flush output buffer, aborting current output
    #time.sleep(0.01)  #give the serial port sometime to receive the data 50ms works well...
    tgS.write(str.encode(tgin)) #send an ack to tgs to make sure it's up
    #time.sleep(0.01)  #give the serial port sometime to receive the data 50ms works well...
    bufa = ""
    bufa = tgS.readline().decode()
    return bufa


def inputTS(text):
    a = writetgs(text)
    #time.sleep(0.1)
    print(a)

if tgS.isOpen():
    try:

        #Test connection
        inputTS('PAC9\n')
        inputTS('CLEAR_ALL\r\n')

        #Do everything in my power to clear earlier data
        print(writetgs('PAC9\r\n')) #CLEAR settings
        #13k seems to be ~ 5 mW
        print(writetgs('SAO9-65535\r\n')) #Set DAC1 to switch between 20000 and 0 Starting at sequence 0
        #This should be accurate to ~ 10 ms, meaning that the UV power is way higher variability than the UV damage
        time.sleep(0.088)
        print(writetgs('SAO9-0\r\n')) #Set DAC1 to switch between 20000 and 0 Starting at sequence 0



        time.sleep(0.1)

    except Exception:
        print("triggerscope serial communication error...: ")

else:
    print("cannot open triggerscope port ")


"""
def loadTgs():
    print "Loading prog array.."
    for i in range(10):
        sout = ("PROG_TTL,%d,8,1\n" % (i+1) ) #prog command for triggerscope
        writetgs(sout)
        print sout
        time.sleep(0.01)
    print"done."

def armTgs():
    sout = ("ARM\n") #prog command for triggerscope
    writetgs(sout)
    print sout

def progtest():
    print(writetgs("PROG_DAC,1,1,65000\n") )
    #print(writetgs("PROG_DAC,2,1,0\n") )

    print(writetgs("PROG_DAC,2,1,32000\n") )

    print(writetgs("PROG_TTL,1,1,1\n") )
    print(writetgs("PROG_TTL,2,2,1\n") )
    print(writetgs("ARM\n") )
    for n in range (10):
        print(tgS.readline())
        time.sleep(0.5)

progtest()
"""
